name: Create Rust release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
      - name: Build
        run: cargo build --release --verbose --target=x86_64-unknown-linux-musl
      - name: Ensure version is correct
        run: |
          (cargo run --release --target=x86_64-unknown-linux-musl -- --version || true) | grep "version $(echo ${{ github.ref_name }} | tr 'v' ' '})"
      - uses: actions/upload-artifact@v2
        with:
          name: rpy
          path: target/x86_64-unknown-linux-musl/release/rpy

  upload:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: Upload binaries to release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          files: "**/rpy"

  cargo:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
